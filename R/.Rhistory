library(readr)
library(dplyr)
library(tidyverse)
library(tigris)
library(sp)
library(htmlwidgets)
ds_svi<-read_csv("../RawData/Social Vulnerability.csv", col_types=cols("FIPS"=col_character()))
#fiptozip<-read.delim("../RawData/ZIP_TRACT_032020.txt", colClasses = c("character","character","character","character","character","character"))
county_svi<-read_csv("../RawData/svi_ny_county.csv", col_types=cols("FIPS"=col_character()))
nyc_zips<-read_csv("../RawData/nyc_zips.csv")
child_opp<-read_csv("../RawData/ny_child_opp.csv")
covid<-read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv")
col_svi<-c("STCNTY","COUNTY","FIPS","RPL_THEME1","RPL_THEME2","RPL_THEME3","RPL_THEME4","RPL_THEMES")
ds_svi<-ds_svi[col_svi]
options(tigris_use_cache = TRUE)
tracts <- tracts(state = 'NY', cb=TRUE)
#values -999 (no data) set to zero
ds_svi$RPL_THEMES[ds_svi$RPL_THEMES==-999]<-0
colnames(ds_svi)[3]<-"GEOID"
ds_merged<-geo_join(tracts, ds_svi, "GEOID", "GEOID")
counties_nyc<-c("New York", "Kings", "Bronx", "Richmond", "Queens")
ds_merged<-ds_merged[ds_merged@data$COUNTY %in% counties_nyc,]
x<-c(5,11,13:17)
knitr::kable(ds_merged[1:5,x], format="markdown")
nyc_cfips<-c("36005", "36047","36061", "36085", "36081" )
ds_svi_county<-county_svi[c(4:6, 79,85, 89, 96, 98)]%>%filter(FIPS %in% nyc_cfips)
knitr::kable(ds_svi_county, format="markdown")
##ZIP CODE CLEAN/TRANSFORM #178 zip codes in nyc
#nyc zip - separate comma sep values into individual rows
nyc_zips<-separate_rows(nyc_zips, `ZIP Codes`, convert=FALSE)
colnames(nyc_zips)[3]<-"ZIP"
#use ZCTAS and nyc zips to create NYC ZIP spatial layer
options(tigris_use_cache = TRUE)
zctas_ny<-zctas(cb=TRUE, starts_with=c("10","11"))
x<-nyc_zips$ZIP
nyc_zips<-zctas_ny[zctas_ny@data$ZCTA5CE10 %in% x, ]
#NYC ZIP SPATIAL+ COVID-19 Data
nyc_covid<-geo_join(nyc_zips, covid, "ZCTA5CE10", "MODZCTA")
##Child OPP CLEAN/TRANSFORM
## select child opp variables
colnames(child_opp)
y<-c(2,3,6,7,15:18)
child_opp<-child_opp[y]
colnames(child_opp)[1]<-"GEOID"
#set factor order in plot value
child_opp$c5_COI_nat<-as.factor(child_opp$c5_COI_nat)
child_opp$c5_COI_nat<-ordered(child_opp$c5_COI_nat, levels=c("Very Low", "Low", "Moderate", "High", "Very High"))
#enrich geo spatial data w/child opp data
merge_opp<-geo_join(tracts, child_opp, "GEOID", "GEOID")
#Only NYC County FIPS
merge_opp<-merge_opp[merge_opp@data$countyfips %in% nyc_cfips,]
popup1 <- paste0("GEOID: ", ds_merged$GEOID, "<br>", "Social Vulnerability Index: ", ds_merged$RPL_THEMES,"<br>", "COUNTY: ", ds_merged$COUNTY)
popup2 <- paste0("GEOID: ", merge_opp$GEOID, "<br>", "Child Opportunity Level: ", merge_opp$c5_COI_nat,"<br>", "COUNTY: ", merge_opp$msaname15)
popup3 <- paste0("Zip Code: ", nyc_covid$ZCTA5CE10, "<br>", "Percent Positive Cases: ", nyc_covid$zcta_cum.perc_pos)
#color ranges
pal1 <- colorNumeric(
palette = "YlGnBu",
domain = ds_merged$RPL_THEMES)
pal2 <- colorFactor(
palette = "YlGnBu",
domain = merge_opp$c5_COI_nat,
reverse = TRUE)
pal3 <- colorNumeric(
palette = "YlGnBu",
domain= nyc_covid$zcta_cum.perc_pos
)
##leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = ds_merged,
fillColor = ~pal1(RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addLegend(pal = pal1,
values = ds_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
#leaflet plot of NYC ZIP LAYER
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nyc_zips,
weight =1,
color= "black",
fillOpacity = 0.1)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nyc_covid,
fillColor = ~pal3(zcta_cum.perc_pos),
weight =2,
color = "black",
fillOpacity = 0.7,
popup = popup3)%>%
addLegend(pal = pal3,
values = nyc_covid$zcta_cum.perc_pos,
position = "bottomright",
title = "Percent Positive",
labFormat = labelFormat(suffix = "%"))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = merge_opp,
fillColor = ~pal2(c5_COI_nat),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup2) %>%
addLegend(pal = pal2,
values = merge_opp$c5_COI_nat,
position = "bottomright",
title = "Child Opp")
#labFormat = labelFormat(suffix = "%"))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
#  addPolygons(data = merge_opp,
#              fillColor = ~pal2(c5_COI_nat),
#              color = "#b2aeae", # you need to use hex colors
#              fillOpacity = 0.9,
#              weight = 1,
#              smoothFactor = 0.2,
#              popup = popup2) %>%
addPolygons(data = ds_merged,
fillColor = ~pal1(RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.9,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addPolygons(data = nyc_zips,
weight =1,
color= "black",
fillOpacity = 0.1)%>%
#  addLegend(pal = pal2,
#            values = merge_opp$c5_COI_nat,
#            position = "bottomright",
#            title = "Child Opp")%>%
addLegend(pal = pal1,
values = ds_merged$RPL_THEMES,
position = "bottomleft",
title = "SVI")
knitr::kable(ds_svi_county, format="markdown")
zctas_ny<-zctas(cb=TRUE, starts_with=c("10","11"))
plot(zctas_ny)
#fiptozip<-read.delim("../RawData/ZIP_TRACT_032020.txt", colClasses = c("character","character","character","character","character","character"))
county_svi<-read_csv("../RawData/svi_ny_county.csv", col_types=cols("FIPS"=col_character()))
#ds_merged@data%>%select(c(5,11,13:17))%>%group_by(COUNTY)
nyc_cfips<-c("36005", "36047","36061", "36085", "36081" )
ds_svi_county<-county_svi%>%filter(FIPS %in% nyc_cfips)
knitr::kable(ds_svi_county[c(4:6, 79,85, 89, 96, 98)], format="markdown")
colnames(ds_svi_county)
glimpse(ds_svi_county)
plot(ds_svi_county)
county_sp<-counties(state="NY")
head(county_sp@data)
county_merged<-geo_join(county_sp, ds_svi_county, "GEOID", "FIPS")
ds_svi_county[c(4:6, 79,85, 89, 96, 98)]
ds_svi_county<-ds_svi_county[c(4:6, 79,85, 89, 96, 98)]
county_merged<-geo_join(county_sp, ds_svi_county, "GEOID", "FIPS")
#pop up
popup <- paste0("County: ", county_merged$COUNTY, "<br>", "SVI: ", county_merged$RPL_THEMES)
#color ranges
pal <- colorNumeric(
palette = "YlGnBu",
domain = county_merged$RPL_THEMES)
##leaflet plot of NYC SVI data by COUNTY
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal1,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
county_sp<-county_sp%>%filter(county_sp$GEOID %in% c("36005", "36047","36061", "36085", "36081" ))
county_sp<-county_sp%>%filter(county_sp@data$GEOID %in% c("36005", "36047","36061", "36085", "36081" ))
county_sp<-county_sp[county_sp@data$GEOID %in% c("36005", "36047","36061", "36085", "36081" ),]
ds_svi_county<-ds_svi_county[c(4:6, 79,85, 89, 96, 98)]
county_merged<-geo_join(county_sp, ds_svi_county, "GEOID", "FIPS")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
ds_svi<-read_csv("../RawData/Social Vulnerability.csv", col_types=cols("FIPS"=col_character()))
#fiptozip<-read.delim("../RawData/ZIP_TRACT_032020.txt", colClasses = c("character","character","character","character","character","character"))
county_svi<-read_csv("../RawData/svi_ny_county.csv", col_types=cols("FIPS"=col_character()))
nyc_zips<-read_csv("../RawData/nyc_zips.csv")
child_opp<-read_csv("../RawData/ny_child_opp.csv")
covid<-read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv")
##SVI DATA CLEAN/TRANSFORM
#select svi variables
col_svi<-c("STCNTY","COUNTY","FIPS","RPL_THEME1","RPL_THEME2","RPL_THEME3","RPL_THEME4","RPL_THEMES")
ds_svi<-ds_svi[col_svi]
#bring in spatial data on  NY w/Tigris
options(tigris_use_cache = TRUE)
tracts <- tracts(state = 'NY', cb=TRUE)
#values -999 (no data) set to zero
ds_svi$RPL_THEMES[ds_svi$RPL_THEMES==-999]<-0
#merge svi and spatial ny data to create a enriched spatial dataset
colnames(ds_svi)[3]<-"GEOID"
ds_merged<-geo_join(tracts, ds_svi, "GEOID", "GEOID")
#NYC counties only
counties_nyc<-c("New York", "Kings", "Bronx", "Richmond", "Queens")
ds_merged<-ds_merged[ds_merged@data$COUNTY %in% counties_nyc,]
x<-c(5,11,13:17)
knitr::kable(ds_merged[1:5,x], format="markdown")
#ds_merged@data%>%select(c(5,11,13:17))%>%group_by(COUNTY)
nyc_cfips<-c("36005", "36047","36061", "36085", "36081" )
ds_svi_county<-county_svi%>%filter(FIPS %in% nyc_cfips)
knitr::kable(ds_svi_county[c(4:6, 79,85, 89, 96, 98)], format="markdown")
county_sp<-counties(state="NY")
county_sp<-county_sp[county_sp@data$GEOID %in% c("36005", "36047","36061", "36085", "36081" ),]
ds_svi_county<-ds_svi_county[c(4:6, 79,85, 89, 96, 98)]
county_merged<-geo_join(county_sp, ds_svi_county, "GEOID", "FIPS")
#pop up
popup <- paste0("County: ", county_merged$COUNTY, "<br>", "SVI: ", county_merged$RPL_THEMES)
#color ranges
pal <- colorNumeric(
palette = "YlGnBu",
domain = county_merged$RPL_THEMES)
##leaflet plot of NYC SVI data by COUNTY
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
knitr::kable(ds_svi_county[c(4:6, 79,85, 89, 96, 98)], format="markdown")
##SVI DATA CLEAN/TRANSFORM
#select svi variables
col_svi<-c("STCNTY","COUNTY","FIPS","RPL_THEME1","RPL_THEME2","RPL_THEME3","RPL_THEME4","RPL_THEMES")
ds_svi<-ds_svi[col_svi]
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(readr)
library(dplyr)
library(tidyverse)
library(tigris)
library(sp)
library(htmlwidgets)
#read data
ds_svi<-read_csv("../RawData/Social Vulnerability.csv", col_types=cols("FIPS"=col_character()))
#fiptozip<-read.delim("../RawData/ZIP_TRACT_032020.txt", colClasses = c("character","character","character","character","character","character"))
county_svi<-read_csv("../RawData/svi_ny_county.csv", col_types=cols("FIPS"=col_character()))
nyc_zips<-read_csv("../RawData/nyc_zips.csv")
child_opp<-read_csv("../RawData/ny_child_opp.csv")
covid<-read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv")
##SVI DATA CLEAN/TRANSFORM
#select svi variables
col_svi<-c("STCNTY","COUNTY","FIPS","RPL_THEME1","RPL_THEME2","RPL_THEME3","RPL_THEME4","RPL_THEMES")
ds_svi<-ds_svi[col_svi]
#bring in spatial data on  NY w/Tigris
options(tigris_use_cache = TRUE)
tracts <- tracts(state = 'NY', cb=TRUE)
#values -999 (no data) set to zero
ds_svi$RPL_THEMES[ds_svi$RPL_THEMES==-999]<-0
#merge svi and spatial ny data to create a enriched spatial dataset
colnames(ds_svi)[3]<-"GEOID"
ds_merged<-geo_join(tracts, ds_svi, "GEOID", "GEOID")
#NYC counties only
counties_nyc<-c("New York", "Kings", "Bronx", "Richmond", "Queens")
ds_merged<-ds_merged[ds_merged@data$COUNTY %in% counties_nyc,]
x<-c(5,11,13:17)
#knitr::kable(ds_merged[1:5,x], format="markdown")
#ds_merged@data%>%select(c(5,11,13:17))%>%group_by(COUNTY)
nyc_cfips<-c("36005", "36047","36061", "36085", "36081" )
ds_svi_county<-county_svi%>%filter(FIPS %in% nyc_cfips)
knitr::kable(ds_svi_county[c(4:6, 79,85, 89, 96, 98)], format="markdown")
county_sp<-counties(state="NY")
county_sp<-county_sp[county_sp@data$GEOID %in% c("36005", "36047","36061", "36085", "36081" ),]
ds_svi_county<-ds_svi_county[c(4:6, 79,85, 89, 96, 98)]
county_merged<-geo_join(county_sp, ds_svi_county, "GEOID", "FIPS")
#pop up
popup <- paste0("County: ", county_merged$COUNTY, "<br>", "SVI: ", county_merged$RPL_THEMES)
#color ranges
pal <- colorNumeric(
palette = "YlGnBu",
domain = county_merged$RPL_THEMES)
##leaflet plot of NYC SVI data by COUNTY
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
##ZIP CODE CLEAN/TRANSFORM #178 zip codes in nyc
#nyc zip - separate comma sep values into individual rows
nyc_zips<-separate_rows(nyc_zips, `ZIP Codes`, convert=FALSE)
colnames(nyc_zips)[3]<-"ZIP"
#use ZCTAS and nyc zips to create NYC ZIP spatial layer
options(tigris_use_cache = TRUE)
zctas_ny<-zctas(cb=TRUE, starts_with=c("10","11"))
x<-nyc_zips$ZIP
nyc_zips<-zctas_ny[zctas_ny@data$ZCTA5CE10 %in% x, ]
#NYC ZIP SPATIAL+ COVID-19 Data
nyc_covid<-geo_join(nyc_zips, covid, "ZCTA5CE10", "MODZCTA")
##leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = ds_merged,
fillColor = ~pal1(RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addLegend(pal = pal1,
values = ds_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
#leaflet plot of NYC ZIP LAYER
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nyc_zips,
weight =1,
color= "black",
fillOpacity = 0.1)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nyc_covid,
fillColor = ~pal3(zcta_cum.perc_pos),
weight =2,
color = "black",
fillOpacity = 0.7,
popup = popup3)%>%
addLegend(pal = pal3,
values = nyc_covid$zcta_cum.perc_pos,
position = "bottomright",
title = "Percent Positive",
labFormat = labelFormat(suffix = "%"))
#leaflet plot of NYC CHILD OPP data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = merge_opp,
fillColor = ~pal2(c5_COI_nat),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup2) %>%
addLegend(pal = pal2,
values = merge_opp$c5_COI_nat,
position = "bottomright",
title = "Child Opp")
#labFormat = labelFormat(suffix = "%"))
#Attempted combination
#leaflet plot of NYC CHILD OPP data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
#  addPolygons(data = merge_opp,
#              fillColor = ~pal2(c5_COI_nat),
#              color = "#b2aeae", # you need to use hex colors
#              fillOpacity = 0.9,
#              weight = 1,
#              smoothFactor = 0.2,
#              popup = popup2) %>%
addPolygons(data = ds_merged,
fillColor = ~pal1(RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.9,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addPolygons(data = nyc_zips,
weight =1,
color= "black",
fillOpacity = 0.1)%>%
#  addLegend(pal = pal2,
#            values = merge_opp$c5_COI_nat,
#            position = "bottomright",
#            title = "Child Opp")%>%
addLegend(pal = pal1,
values = ds_merged$RPL_THEMES,
position = "bottomleft",
title = "SVI")
pal <- colorNumeric(
palette = "blues",
domain = county_merged$RPL_THEMES)
##leaflet plot of NYC SVI data by COUNTY
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
pal <- colorNumeric(
palette = "BuGn",
domain = county_merged$RPL_THEMES)
##leaflet plot of NYC SVI data by COUNTY
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "black", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
covid_county<-read.csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv")
knitr::kable(covid_county, format="markdown")
covid_county<-read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv")
knitr::kable(covid_county, format="markdown")
##Child OPP CLEAN/TRANSFORM
## select child opp variables
colnames(child_opp)
y<-c(2,3,6,7,15:18)
child_opp<-child_opp[y]
colnames(child_opp)[1]<-"GEOID"
#set factor order in plot value
child_opp$c5_COI_nat<-as.factor(child_opp$c5_COI_nat)
child_opp$c5_COI_nat<-ordered(child_opp$c5_COI_nat, levels=c("Very Low", "Low", "Moderate", "High", "Very High"))
#enrich geo spatial data w/child opp data
merge_opp<-geo_join(tracts, child_opp, "GEOID", "GEOID")
#Only NYC County FIPS
merge_opp<-merge_opp[merge_opp@data$countyfips %in% nyc_cfips,]
#write data into derived folder
#write.csv(child_opp, "../DerivedData/child_opp.csv")
#write.csv(merge_opp, "../DerivedData/.csv")
#write.csv("../DerivedData/child_opp.csv")
##LEAFLET PLOTTING
#hover tools
popup1 <- paste0("GEOID: ", ds_merged$GEOID, "<br>", "Social Vulnerability Index: ", ds_merged$RPL_THEMES,"<br>", "COUNTY: ", ds_merged$COUNTY)
popup2 <- paste0("GEOID: ", merge_opp$GEOID, "<br>", "Child Opportunity Level: ", merge_opp$c5_COI_nat,"<br>", "COUNTY: ", merge_opp$msaname15)
popup3 <- paste0("Zip Code: ", nyc_covid$ZCTA5CE10, "<br>", "Percent Positive Cases: ", nyc_covid$zcta_cum.perc_pos)
#color ranges
pal1 <- colorNumeric(
palette = "YlGnBu",
domain = ds_merged$RPL_THEMES)
pal2 <- colorFactor(
palette = "YlGnBu",
domain = merge_opp$c5_COI_nat,
reverse = TRUE)
pal3 <- colorNumeric(
palette = "YlGnBu",
domain= nyc_covid$zcta_cum.perc_pos
)
