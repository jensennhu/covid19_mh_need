position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "black", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#labFormat = labelFormat(suffix = "%"))
covid_county<-read.csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv")
knitr::kable(covid_county, format="markdown")
covid_county<-read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv")
knitr::kable(covid_county, format="markdown")
##Child OPP CLEAN/TRANSFORM
## select child opp variables
colnames(child_opp)
y<-c(2,3,6,7,15:18)
child_opp<-child_opp[y]
colnames(child_opp)[1]<-"GEOID"
#set factor order in plot value
child_opp$c5_COI_nat<-as.factor(child_opp$c5_COI_nat)
child_opp$c5_COI_nat<-ordered(child_opp$c5_COI_nat, levels=c("Very Low", "Low", "Moderate", "High", "Very High"))
#enrich geo spatial data w/child opp data
merge_opp<-geo_join(tracts, child_opp, "GEOID", "GEOID")
#Only NYC County FIPS
merge_opp<-merge_opp[merge_opp@data$countyfips %in% nyc_cfips,]
#write data into derived folder
#write.csv(child_opp, "../DerivedData/child_opp.csv")
#write.csv(merge_opp, "../DerivedData/.csv")
#write.csv("../DerivedData/child_opp.csv")
##LEAFLET PLOTTING
#hover tools
popup1 <- paste0("GEOID: ", ds_merged$GEOID, "<br>", "Social Vulnerability Index: ", ds_merged$RPL_THEMES,"<br>", "COUNTY: ", ds_merged$COUNTY)
popup2 <- paste0("GEOID: ", merge_opp$GEOID, "<br>", "Child Opportunity Level: ", merge_opp$c5_COI_nat,"<br>", "COUNTY: ", merge_opp$msaname15)
popup3 <- paste0("Zip Code: ", nyc_covid$ZCTA5CE10, "<br>", "Percent Positive Cases: ", nyc_covid$zcta_cum.perc_pos)
#color ranges
pal1 <- colorNumeric(
palette = "YlGnBu",
domain = ds_merged$RPL_THEMES)
pal2 <- colorFactor(
palette = "YlGnBu",
domain = merge_opp$c5_COI_nat,
reverse = TRUE)
pal3 <- colorNumeric(
palette = "YlGnBu",
domain= nyc_covid$zcta_cum.perc_pos
)
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
# Load packages
library(readr) # input/output
library(dplyr) # data manipulation
library(tidyverse) # data manipulation
library(tigris) # geospatial data
library(sp) # visualization
library(htmlwidgets) # visualization
library(leaflet) # visualization
# Load data
ds_svi <- read_csv("../RawData/Social Vulnerability.csv", col_types=cols("FIPS"=col_character()))
ds_county_svi <- read_csv("../RawData/svi_ny_county.csv", col_types=cols("FIPS"=col_character()))
nyc_zips <- read_csv("../RawData/nyc_zips.csv")
child_opp <- read_csv("../RawData/ny_child_opp.csv")
covid <- read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv")
covid_boro <- read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv")
# select relevant svi variables
col_svi <- c("STCNTY","COUNTY","FIPS","RPL_THEME1","RPL_THEME2","RPL_THEME3","RPL_THEME4","RPL_THEMES")
ds_svi <- ds_svi[col_svi]
# bring in NYS census tract spatial data
options(tigris_use_cache = TRUE)
tracts <- tracts(state = 'NY', cb=TRUE)
ds_svi
head(svi_tracts@data)
# merge svi and spatial ny data to create a enriched spatial dataset
svi_tracts <- geo_join(tracts, ds_svi, "GEOID", "FIPS")
# nyc counties only
counties_nyc <- c("New York", "Kings", "Bronx", "Richmond", "Queens")
svi_tracts <- svi_tracts[svi_tracts@data$COUNTY %in% counties_nyc,]
# popup
popup1 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
# pal
pal1 <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal1(svi_tracts$RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addLegend(pal = pal1,
values = svi_tracts$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
svi_tracts
# popup
popup1 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
# pal
pal1 <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal1(svi_tracts$RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addLegend(pal = pal1,
values = svi_tracts$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
popup1 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
# pal
pal1 <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts@data$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal1(RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1)
pal1 <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts@data$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal1(svi_tracts@data$RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1)
pal1 <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts@data$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts@data,
fillColor = ~pal1(svi_tracts@data$RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addLegend(pal = pal1,
values = svi_tracts$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
pal1
svi_tracts@data$RPL_THEMES
svi_tracts@data$RPL_THEMES %>% head()
svi_tracts@data$RPL_THEMES %>% head()
pal <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal(svi_tracts$RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1)
pal <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal(RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal(RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addLegend(pal = pal1,
values = svi_tracts$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
svi_tracts[svi_tracts$RPL_THEMES==-999]
svi_tracts[svi_tracts$RPL_THEMES==-999]
svi_tracts[svi_tracts$RPL_THEMES=="-999"]
svi_tracts[svi_tracts$RPL_THEMES="-999"]
svi_tracts[svi_tracts$RPL_THEMES=-999]
svi_tracts[svi_tracts$RPL_THEMES]
svi_tracts$RPL_THEMES%>%filter(RPL_THEMES==-999)
svi_tracts[svi_tracts==-999,]
svi_tracts[svi_tracts$RPL_THEMES==-999,]
svi_tracts$RPL_THEMES[svi_tracts$RPL_THEMES==-999,]%>%head()
svi_tracts[svi_tracts$RPL_THEMES==-999,]%>%head()
ds_svi %>% head
ds_svi %>% filter(RPL_THEMES==-999)
ds_svi %>% filter(RPL_THEMES==-999)%>%tally
ds_svi %>% filter(RPL_THEMES==-999) %>% count
ds_svi[ds_svi$RPL_THEMES==-999]
ds_svi[RPL_THEMES==-999]
ds_svi$RPL_THEMES[ds_svi$RPL_THEMES==-999]
ds_svi$RPL_THEMES[ds_svi$RPL_THEMES==-999]<-0
# merge svi and spatial ny data to create a enriched spatial dataset
svi_tracts <- geo_join(tracts, ds_svi, "GEOID", "FIPS")
# nyc counties only
counties_nyc <- c("New York", "Kings", "Bronx", "Richmond", "Queens")
svi_tracts <- svi_tracts[svi_tracts@data$COUNTY %in% counties_nyc,]
# popup
popup1 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
# pal
pal <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal(RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addLegend(pal = pal1,
values = svi_tracts$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
# popup
popup1 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
# pal
pal <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts$RPL_THEMES)
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
# Load packages
library(readr) # input/output
library(dplyr) # data manipulation
library(tidyverse) # data manipulation
library(tigris) # geospatial data
library(sp) # visualization
library(htmlwidgets) # visualization
library(leaflet) # visualization
# Load data
ds_svi <- read_csv("../RawData/Social Vulnerability.csv", col_types=cols("FIPS"=col_character()))
ds_county_svi <- read_csv("../RawData/svi_ny_county.csv", col_types=cols("FIPS"=col_character()))
nyc_zips <- read_csv("../RawData/nyc_zips.csv")
child_opp <- read_csv("../RawData/ny_child_opp.csv")
covid <- read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv")
covid_boro <- read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv")
# select relevant svi variables
col_svi <- c("STCNTY","COUNTY","FIPS","RPL_THEME1","RPL_THEME2","RPL_THEME3","RPL_THEME4","RPL_THEMES")
ds_svi <- ds_svi[col_svi]
ds_svi$RPL_THEMES[ds_svi$RPL_THEMES==-999]<-0
# bring in NYS census tract spatial data
options(tigris_use_cache = TRUE)
tracts <- tracts(state = 'NY', cb=TRUE)
# merge svi and spatial ny data to create a enriched spatial dataset
svi_tracts <- geo_join(tracts, ds_svi, "GEOID", "FIPS")
# nyc counties only
counties_nyc <- c("New York", "Kings", "Bronx", "Richmond", "Queens")
svi_tracts <- svi_tracts[svi_tracts@data$COUNTY %in% counties_nyc,]
# nyc county fips only
nyc_cfips<-c("36005", "36047","36061", "36085", "36081" )
svi_county<-ds_county_svi%>%filter(FIPS %in% nyc_cfips)
# display table for review
knitr::kable(svi_county[c(4:6, 79,85, 89, 96, 98)], format="markdown")
# bring in NYS county spatial data
county_sp<-counties(state="NY")
# nyc county fips only
county_sp<-county_sp[county_sp@data$GEOID %in% nyc_cfips,]
# svi data merged w/county spatial data
county_merged<-geo_join(county_sp, svi_county, "GEOID", "FIPS")
# pop up
popup <- paste0("County: ", county_merged$COUNTY, "<br>", "SVI: ", county_merged$RPL_THEMES)
# color ranges
pal <- colorNumeric(
palette = "BuGn",
domain = county_merged$RPL_THEMES)
# leaflet plot of NYC SVI data by COUNTY
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(county_merged$RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = county_merged$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
#
covid_boro<-read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv")
covid_boro<-covid_boro%>%mutate(COUNTY=ifelse(BOROUGH_GROUP=='The Bronx','Bronx', ifelse(BOROUGH_GROUP=='Brooklyn','Kings', ifelse(BOROUGH_GROUP=='Manhattan','New York', ifelse(BOROUGH_GROUP=='Queens', 'Queens', ifelse(BOROUGH_GROUP=='Staten Island','Richmond', 'NA'))))))
knitr::kable(cc, format="markdown")
#
covid_boro<-read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv")
covid_boro<-covid_boro%>%mutate(COUNTY=ifelse(BOROUGH_GROUP=='The Bronx','Bronx', ifelse(BOROUGH_GROUP=='Brooklyn','Kings', ifelse(BOROUGH_GROUP=='Manhattan','New York', ifelse(BOROUGH_GROUP=='Queens', 'Queens', ifelse(BOROUGH_GROUP=='Staten Island','Richmond', 'NA'))))))
knitr::kable(covid_boro, format="markdown")
# keep RPL and SPL columns
svi_county<-svi_county[c(4:6, 79,85, 89, 96:98)]
# join svi and covid data by county
svi_cc<-left_join(svi_county, covid_boro, by="COUNTY")
# percent rank covid case rate
svi_cc<-svi_cc%>%mutate(covid_rank=percent_rank(COVID_CASE_RATE))
# add percent ranked covid case rate to SPL Themes
svi_cc$adj_SPL<-svi_cc$SPL_THEMES + svi_cc$covid_rank
# percent rank adjusted SPL
svi_cc<-svi_cc%>%mutate(svi_covid_rank=percent_rank(adj_SPL))
colnames(svi_cc)
knitr::kable(svi_cc[c(1,10, 8, 12:15)], format="markdown")
# join svi-covid data with county spatial data
svi_cc<-geo_join(county_sp, svi_cc, "GEOID", "FIPS")
# pop up
popup <- paste0("County: ", svi_cc$COUNTY, "<br>", "SVI_Covid: ", svi_cc$svi_covid_rank)
# color ranges
pal <- colorNumeric(
palette = "BuGn",
domain = svi_cc$svi_covid_rank)
# leaflet plot of NYC SVI data by COUNTY
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = county_merged,
fillColor = ~pal(svi_cc$svi_covid_rank),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = svi_cc$svi_covid_rank,
position = "bottomright",
title = "COVID adjusted Social Vulnerability Index")
# 178 zip codes in nyc - separate comma sep values into individual rows
nyc_zips<-separate_rows(nyc_zips, `ZIP Codes`, convert=FALSE)
colnames(nyc_zips)[3]<-"ZIP"
# use ZCTAS and nyc zips to create NYC ZIP spatial layer
options(tigris_use_cache = TRUE)
zctas_ny<-zctas(cb=TRUE, starts_with=c("10","11"))
x<-nyc_zips$ZIP
nyc_zips<-zctas_ny[zctas_ny@data$ZCTA5CE10 %in% x, ]
# NYC ZIP SPATIAL+ COVID-19 Data
nyc_covid<-geo_join(nyc_zips, covid, "ZCTA5CE10", "MODZCTA")
## select child opp variables
y<-c(2,3,6,7,15:18)
child_opp<-child_opp[y]
colnames(child_opp)[1]<-"GEOID"
# set factor order in plot value
child_opp$c5_COI_nat<-as.factor(child_opp$c5_COI_nat)
child_opp$c5_COI_nat<-ordered(child_opp$c5_COI_nat, levels=c("Very Low", "Low", "Moderate", "High", "Very High"))
# enrich geo spatial data w/child opp data
merge_opp<-geo_join(tracts, child_opp, "GEOID", "GEOID")
# only NYC County FIPS
merge_opp<-merge_opp[merge_opp@data$countyfips %in% nyc_cfips,]
# popup
popup1 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
# pal
pal <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal(RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addLegend(pal = pal1,
values = svi_tracts$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
# popup
popup1 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
# pal
pal <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts$RPL_THEMES)
## leaflet plot of NYC SVI data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = svi_tracts,
fillColor = ~pal(RPL_THEMES),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addLegend(pal = pal,
values = svi_tracts$RPL_THEMES,
position = "bottomright",
title = "Social Vulnerability Index")
# leaflet plot of NYC ZIP LAYER
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nyc_zips,
weight =1,
color= "black",
fillOpacity = 0.1)
# hover tools
popup3 <- paste0("Zip Code: ", nyc_covid$ZCTA5CE10, "<br>", "Percent Positive Cases: ", nyc_covid$zcta_cum.perc_pos)
# color ranges
pal3 <- colorNumeric(
palette = "YlGnBu",
domain= nyc_covid$zcta_cum.perc_pos)
# NYC ZIPS + COVID19 % Positive
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nyc_covid,
fillColor = ~pal3(zcta_cum.perc_pos),
weight =2,
color = "black",
fillOpacity = 0.7,
popup = popup3)%>%
addLegend(pal = pal3,
values = nyc_covid$zcta_cum.perc_pos,
position = "bottomright",
title = "Percent Positive",
labFormat = labelFormat(suffix = "%"))
##LEAFLET PLOTTING
#hover tools
popup2 <- paste0("GEOID: ", merge_opp$GEOID, "<br>", "Child Opportunity Level: ", merge_opp$c5_COI_nat,"<br>", "COUNTY: ", merge_opp$msaname15)
#color ranges
pal2 <- colorFactor(
palette = "YlGnBu",
domain = merge_opp$c5_COI_nat,
reverse = TRUE)
#leaflet plot of NYC CHILD OPP data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = merge_opp,
fillColor = ~pal2(c5_COI_nat),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup2) %>%
addLegend(pal = pal2,
values = merge_opp$c5_COI_nat,
position = "bottomright",
title = "Child Opp")
#labFormat = labelFormat(suffix = "%"))
##LEAFLET PLOTTING
#hover tools
popup1 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
#color ranges
pal1 <- colorNumeric(
palette = "YlGnBu",
domain = svi_tracts$RPL_THEMES)
#Attempted combination
#leaflet plot of NYC CHILD OPP data by TRACT
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
#  addPolygons(data = merge_opp,
#              fillColor = ~pal2(c5_COI_nat),
#              color = "#b2aeae", # you need to use hex colors
#              fillOpacity = 0.9,
#              weight = 1,
#              smoothFactor = 0.2,
#              popup = popup2) %>%
addPolygons(data = svi_tracts,
fillColor = ~pal1(RPL_THEMES),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.9,
weight = 1,
smoothFactor = 0.2,
popup = popup1) %>%
addPolygons(data = nyc_zips,
weight =1,
color= "black",
fillOpacity = 0.1)%>%
#  addLegend(pal = pal2,
#            values = merge_opp$c5_COI_nat,
#            position = "bottomright",
#            title = "Child Opp")%>%
addLegend(pal = pal1,
values = svi_tracts$RPL_THEMES,
position = "bottomleft",
title = "SVI")
