addTiles(group = "default") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
# Overlay Groups
addPolygons(data = nyc_covid,  # NYC ZIPS + COVID19 % Positive
fillColor = ~pal1(zcta_cum.perc_pos),
weight =2,
color = "black",
fillOpacity = 0.7,
popup = popup1,
group = "COVID19 % Positive") %>%
addPolygons(data = svi_tracts, # SVI by Census Tracts
fillColor = ~pal2(cat),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup2,
group = "Social Vulnerability Index") %>%
addPolygons(data = merge_opp, # Child Opportunity Index by Census Tracts
fillColor = ~pal3(c5_COI_nat),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup3,
group = "Child Opportunity Index") %>%
addPolygons(data = nyc_zips, # NYC Zip Codes
weight =2,
color= "black",
fillOpacity = 0,
group = "zips") %>%
addPolygons(data = county_sp, # NY County Boundaries
color = "black",
fillOpacity = 0,
weight = 2,
group = "county") %>%
addCircleMarkers(data=roster, # SMH Layer
lat = ~lat,
lng = ~lon,
popup = SMHLayerpopup,
weight = 1,
radius = ~ifelse(roster$`Type of School`=="Consultant Program", 3,6),
stroke = FALSE,
fillOpacity = 0,
color = ~SMHLayerColor(roster$`Type of School`),
group = "SMH" ) %>%
# Layers control
addLayersControl(
baseGroups = c("Positron", "default", "Toner Lite"),
overlayGroups = c("COVID19 % Positive", "Social Vulnerability Index", "Child Opportunity Index", "zips", "county", "SMH" ),
options = layersControlOptions(collapsed = FALSE)
)  %>%
addLegend(pal = pal1,
values = nyc_covid$zcta_cum.perc_pos,
position = "bottomleft",
title = "Percent Positive",
labFormat = labelFormat(suffix = "%"),
group = "COVID19 % Positive") %>%
addLegend(pal = pal2,
values = svi_tracts$cat,
position = "bottomright",
title = "Social Vulnerability Index",
group = "Social Vulnerability Index") %>%
addLegend(pal = pal3,
values = merge_opp$c5_COI_nat,
position = "topright",
title = "Child Opp",
group = "Child Opportunity Index") %>%
addLegend(pal = SMHLayerColor,
values = roster$`Type of School`,
position = "topleft",
title = "SMH Program",
group = "SMH" ) %>%
hideGroup(c("COVID19 % Positive", "Child Opportunity Index", "zips", "county", "SMH" ))
p
# Layer 1 - COVID by ZIP options
popup1 <- paste0("Zip Code: ", nyc_covid$ZCTA5CE10, "<br>", "Percent Positive Cases: ", nyc_covid$zcta_cum.perc_pos)
pal1 <- colorNumeric(palette = "YlGnBu", domain= nyc_covid$zcta_cum.perc_pos)
# Layer 2 - SVI by Census Tract options
popup2 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
pal2 <- colorFactor(palette = "YlGnBu", domain = svi_tracts$cat)
# Layer 3 - Child Opportunity Index
popup3 <- paste0("GEOID: ", merge_opp$GEOID, "<br>", "Child Opportunity Level: ", merge_opp$c5_COI_nat,"<br>", "COUNTY: ", merge_opp$msaname15)
pal3 <- colorFactor(palette = "YlGnBu", domain = merge_opp$c5_COI_nat, reverse = TRUE)
# Layer 4 - SMH Layer
SMHLayerpopup <- paste0("School Name: ", roster$School.Name, "<br>","Program: ", roster$`Type of School`)
SMHLayerColor <- colorFactor(palette = c("Red", "Black","Blue"), domain=roster$`Type of School`)
p <- leaflet() %>%
# Base Groups
addProviderTiles("CartoDB.Positron", group = "Positron") %>%
addTiles(group = "default") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
# Overlay Groups
addPolygons(data = nyc_covid,  # NYC ZIPS + COVID19 % Positive
fillColor = ~pal1(zcta_cum.perc_pos),
weight =2,
color = "black",
fillOpacity = 0.7,
popup = popup1,
group = "COVID19 % Positive") %>%
addPolygons(data = svi_tracts, # SVI by Census Tracts
fillColor = ~pal2(cat),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup2,
group = "Social Vulnerability Index") %>%
addPolygons(data = merge_opp, # Child Opportunity Index by Census Tracts
fillColor = ~pal3(c5_COI_nat),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup3,
group = "Child Opportunity Index") %>%
addPolygons(data = nyc_zips, # NYC Zip Codes
weight =2,
color= "black",
fillOpacity = 1,
group = "zips") %>%
addPolygons(data = county_sp, # NY County Boundaries
color = "black",
fillOpacity = 0,
weight = 2,
group = "county") %>%
addCircleMarkers(data=roster, # SMH Layer
lat = ~lat,
lng = ~lon,
popup = SMHLayerpopup,
weight = 0.5,
radius = ~ifelse(roster$`Type of School`=="Consultant Program", 3,6),
stroke = FALSE,
fillOpacity = 0,
color = ~SMHLayerColor(roster$`Type of School`),
group = "SMH" ) %>%
# Layers control
addLayersControl(
baseGroups = c("Positron", "default", "Toner Lite"),
overlayGroups = c("COVID19 % Positive", "Social Vulnerability Index", "Child Opportunity Index", "zips", "county", "SMH" ),
options = layersControlOptions(collapsed = FALSE)
)  %>%
addLegend(pal = pal1,
values = nyc_covid$zcta_cum.perc_pos,
position = "bottomleft",
title = "Percent Positive",
labFormat = labelFormat(suffix = "%"),
group = "COVID19 % Positive") %>%
addLegend(pal = pal2,
values = svi_tracts$cat,
position = "bottomright",
title = "Social Vulnerability Index",
group = "Social Vulnerability Index") %>%
addLegend(pal = pal3,
values = merge_opp$c5_COI_nat,
position = "topright",
title = "Child Opp",
group = "Child Opportunity Index") %>%
addLegend(pal = SMHLayerColor,
values = roster$`Type of School`,
position = "topleft",
title = "SMH Program",
group = "SMH" ) %>%
hideGroup(c("COVID19 % Positive", "Child Opportunity Index", "zips", "county", "SMH" ))
p
# Layer 1 - COVID by ZIP options
popup1 <- paste0("Zip Code: ", nyc_covid$ZCTA5CE10, "<br>", "Percent Positive Cases: ", nyc_covid$zcta_cum.perc_pos)
pal1 <- colorNumeric(palette = "YlGnBu", domain= nyc_covid$zcta_cum.perc_pos)
# Layer 2 - SVI by Census Tract options
popup2 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
pal2 <- colorFactor(palette = "YlGnBu", domain = svi_tracts$cat)
# Layer 3 - Child Opportunity Index
popup3 <- paste0("GEOID: ", merge_opp$GEOID, "<br>", "Child Opportunity Level: ", merge_opp$c5_COI_nat,"<br>", "COUNTY: ", merge_opp$msaname15)
pal3 <- colorFactor(palette = "YlGnBu", domain = merge_opp$c5_COI_nat, reverse = TRUE)
# Layer 4 - SMH Layer
SMHLayerpopup <- paste0("School Name: ", roster$School.Name, "<br>","Program: ", roster$`Type of School`)
SMHLayerColor <- colorFactor(palette = c("Red", "Yellow","Blue"), domain=roster$`Type of School`)
p <- leaflet() %>%
# Base Groups
addProviderTiles("CartoDB.Positron", group = "Positron") %>%
addTiles(group = "default") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
# Overlay Groups
addPolygons(data = nyc_covid,  # NYC ZIPS + COVID19 % Positive
fillColor = ~pal1(zcta_cum.perc_pos),
weight =2,
color = "black",
fillOpacity = 0.7,
popup = popup1,
group = "COVID19 % Positive") %>%
addPolygons(data = svi_tracts, # SVI by Census Tracts
fillColor = ~pal2(cat),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup2,
group = "Social Vulnerability Index") %>%
addPolygons(data = merge_opp, # Child Opportunity Index by Census Tracts
fillColor = ~pal3(c5_COI_nat),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup3,
group = "Child Opportunity Index") %>%
addPolygons(data = nyc_zips, # NYC Zip Codes
weight =2,
color= "black",
fillOpacity = 0,
group = "zips") %>%
addPolygons(data = county_sp, # NY County Boundaries
color = "black",
fillOpacity = 0,
weight = 2,
group = "county") %>%
addCircleMarkers(data=roster, # SMH Layer
lat = ~lat,
lng = ~lon,
popup = SMHLayerpopup,
weight = 1,
radius = ~ifelse(roster$`Type of School`=="Consultant Program", 3,6),
stroke = FALSE,
fillOpacity = 0.5,
color = ~SMHLayerColor(roster$`Type of School`),
group = "SMH" ) %>%
# Layers control
addLayersControl(
baseGroups = c("Positron", "default", "Toner Lite"),
overlayGroups = c("COVID19 % Positive", "Social Vulnerability Index", "Child Opportunity Index", "zips", "county", "SMH" ),
options = layersControlOptions(collapsed = FALSE)
)  %>%
addLegend(pal = pal1,
values = nyc_covid$zcta_cum.perc_pos,
position = "bottomleft",
title = "Percent Positive",
labFormat = labelFormat(suffix = "%"),
group = "COVID19 % Positive") %>%
addLegend(pal = pal2,
values = svi_tracts$cat,
position = "bottomright",
title = "Social Vulnerability Index",
group = "Social Vulnerability Index") %>%
addLegend(pal = pal3,
values = merge_opp$c5_COI_nat,
position = "topright",
title = "Child Opp",
group = "Child Opportunity Index") %>%
addLegend(pal = SMHLayerColor,
values = roster$`Type of School`,
position = "topleft",
title = "SMH Program",
group = "SMH" ) %>%
hideGroup(c("COVID19 % Positive", "Child Opportunity Index", "zips", "county", "SMH" ))
p
p <- leaflet() %>%
# Base Groups
addProviderTiles("CartoDB.Positron", group = "Positron") %>%
addTiles(group = "default") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
# Overlay Groups
addPolygons(data = nyc_covid,  # NYC ZIPS + COVID19 % Positive
fillColor = ~pal1(zcta_cum.perc_pos),
weight =2,
color = "black",
fillOpacity = 0.7,
popup = popup1,
group = "COVID19 % Positive") %>%
addPolygons(data = svi_tracts, # SVI by Census Tracts
fillColor = ~pal2(cat),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup2,
group = "Social Vulnerability Index") %>%
addPolygons(data = merge_opp, # Child Opportunity Index by Census Tracts
fillColor = ~pal3(c5_COI_nat),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup3,
group = "Child Opportunity Index") %>%
addPolygons(data = nyc_zips, # NYC Zip Codes
weight =2,
color= "black",
fillOpacity = 0,
group = "zips") %>%
addPolygons(data = county_sp, # NY County Boundaries
color = "black",
fillOpacity = 0,
weight = 2,
group = "county") %>%
addCircleMarkers(data=roster, # SMH Layer
lat = ~lat,
lng = ~lon,
popup = SMHLayerpopup,
weight = 1,
radius = ~ifelse(roster$`Type of School`=="Consultant Program", 3,6),
stroke = FALSE,
fillOpacity = 0.9,
color = ~SMHLayerColor(roster$`Type of School`),
group = "SMH" ) %>%
# Layers control
addLayersControl(
baseGroups = c("Positron", "default", "Toner Lite"),
overlayGroups = c("COVID19 % Positive", "Social Vulnerability Index", "Child Opportunity Index", "zips", "county", "SMH" ),
options = layersControlOptions(collapsed = FALSE)
)  %>%
addLegend(pal = pal1,
values = nyc_covid$zcta_cum.perc_pos,
position = "bottomleft",
title = "Percent Positive",
labFormat = labelFormat(suffix = "%"),
group = "COVID19 % Positive") %>%
addLegend(pal = pal2,
values = svi_tracts$cat,
position = "bottomright",
title = "Social Vulnerability Index",
group = "Social Vulnerability Index") %>%
addLegend(pal = pal3,
values = merge_opp$c5_COI_nat,
position = "topright",
title = "Child Opp",
group = "Child Opportunity Index") %>%
addLegend(pal = SMHLayerColor,
values = roster$`Type of School`,
position = "topleft",
title = "SMH Program",
group = "SMH" ) %>%
hideGroup(c("COVID19 % Positive", "Child Opportunity Index", "zips", "county", "SMH" ))
p
SMHLayerColor <- colorFactor(palette = c("Red", "Black","Blue"), domain=roster$`Type of School`)
p <- leaflet() %>%
# Base Groups
addProviderTiles("CartoDB.Positron", group = "Positron") %>%
addTiles(group = "default") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
# Overlay Groups
addPolygons(data = nyc_covid,  # NYC ZIPS + COVID19 % Positive
fillColor = ~pal1(zcta_cum.perc_pos),
weight =2,
color = "black",
fillOpacity = 0.7,
popup = popup1,
group = "COVID19 % Positive") %>%
addPolygons(data = svi_tracts, # SVI by Census Tracts
fillColor = ~pal2(cat),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup2,
group = "Social Vulnerability Index") %>%
addPolygons(data = merge_opp, # Child Opportunity Index by Census Tracts
fillColor = ~pal3(c5_COI_nat),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup3,
group = "Child Opportunity Index") %>%
addPolygons(data = nyc_zips, # NYC Zip Codes
weight =2,
color= "black",
fillOpacity = 0,
group = "zips") %>%
addPolygons(data = county_sp, # NY County Boundaries
color = "black",
fillOpacity = 0,
weight = 2,
group = "county") %>%
addCircleMarkers(data=roster, # SMH Layer
lat = ~lat,
lng = ~lon,
popup = SMHLayerpopup,
weight = 1,
radius = ~ifelse(roster$`Type of School`=="Consultant Program", 3,6),
stroke = FALSE,
fillOpacity = 0.9,
color = ~SMHLayerColor(roster$`Type of School`),
group = "SMH" ) %>%
# Layers control
addLayersControl(
baseGroups = c("Positron", "default", "Toner Lite"),
overlayGroups = c("COVID19 % Positive", "Social Vulnerability Index", "Child Opportunity Index", "zips", "county", "SMH" ),
options = layersControlOptions(collapsed = FALSE)
)  %>%
addLegend(pal = pal1,
values = nyc_covid$zcta_cum.perc_pos,
position = "bottomleft",
title = "Percent Positive",
labFormat = labelFormat(suffix = "%"),
group = "COVID19 % Positive") %>%
addLegend(pal = pal2,
values = svi_tracts$cat,
position = "bottomright",
title = "Social Vulnerability Index",
group = "Social Vulnerability Index") %>%
addLegend(pal = pal3,
values = merge_opp$c5_COI_nat,
position = "topright",
title = "Child Opp",
group = "Child Opportunity Index") %>%
addLegend(pal = SMHLayerColor,
values = roster$`Type of School`,
position = "topleft",
title = "SMH Program",
group = "SMH" ) %>%
hideGroup(c("COVID19 % Positive", "Child Opportunity Index", "zips", "county", "SMH" ))
p
# Layer 1 - COVID by ZIP options
popup1 <- paste0("Zip Code: ", nyc_covid$ZCTA5CE10, "<br>", "Percent Positive Cases: ", nyc_covid$zcta_cum.perc_pos)
pal1 <- colorNumeric(palette = "YlGnBu", domain= nyc_covid$zcta_cum.perc_pos)
# Layer 2 - SVI by Census Tract options
popup2 <- paste0("GEOID: ", svi_tracts$GEOID, "<br>", "Social Vulnerability Index: ", svi_tracts$RPL_THEMES,"<br>", "COUNTY: ", svi_tracts$COUNTY)
pal2 <- colorFactor(palette = "YlGnBu", domain = svi_tracts$cat)
# Layer 3 - Child Opportunity Index
popup3 <- paste0("GEOID: ", merge_opp$GEOID, "<br>", "Child Opportunity Level: ", merge_opp$c5_COI_nat,"<br>", "COUNTY: ", merge_opp$msaname15)
pal3 <- colorFactor(palette = "YlGnBu", domain = merge_opp$c5_COI_nat, reverse = TRUE)
# Layer 4 - SMH Layer
SMHLayerpopup <- paste0("School Name: ", roster$School.Name, "<br>","Program: ", roster$`Type of School`)
SMHLayerColor <- colorFactor(palette = c("Red", "Black","Blue"), domain=roster$`Type of School`)
p <- leaflet() %>%
# Base Groups
addProviderTiles("CartoDB.Positron", group = "Positron") %>%
addTiles(group = "default") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
# Overlay Groups
addPolygons(data = nyc_covid,  # NYC ZIPS + COVID19 % Positive
fillColor = ~pal1(zcta_cum.perc_pos),
weight =2,
color = "black",
fillOpacity = 0.7,
popup = popup1,
group = "COVID19 % Positive") %>%
addPolygons(data = svi_tracts, # SVI by Census Tracts
fillColor = ~pal2(cat),
color = "black",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup2,
group = "Social Vulnerability Index") %>%
addPolygons(data = merge_opp, # Child Opportunity Index by Census Tracts
fillColor = ~pal3(c5_COI_nat),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup3,
group = "Child Opportunity Index") %>%
addPolygons(data = nyc_zips, # NYC Zip Codes
weight =2,
color= "black",
fillOpacity = 0,
group = "zips") %>%
addPolygons(data = county_sp, # NY County Boundaries
color = "black",
fillOpacity = 0,
weight = 2,
group = "county") %>%
addCircleMarkers(data=roster, # SMH Layer
lat = ~lat,
lng = ~lon,
popup = SMHLayerpopup,
weight = 1,
radius = 1,
stroke = FALSE,
fillOpacity = 0.9,
color = ~SMHLayerColor(roster$`Type of School`),
group = "SMH" ) %>%
# Layers control
addLayersControl(
baseGroups = c("Positron", "default", "Toner Lite"),
overlayGroups = c("COVID19 % Positive", "Social Vulnerability Index", "Child Opportunity Index", "zips", "county", "SMH" ),
options = layersControlOptions(collapsed = FALSE)
)  %>%
addLegend(pal = pal1,
values = nyc_covid$zcta_cum.perc_pos,
position = "bottomleft",
title = "Percent Positive",
labFormat = labelFormat(suffix = "%"),
group = "COVID19 % Positive") %>%
addLegend(pal = pal2,
values = svi_tracts$cat,
position = "bottomright",
title = "Social Vulnerability Index",
group = "Social Vulnerability Index") %>%
addLegend(pal = pal3,
values = merge_opp$c5_COI_nat,
position = "topright",
title = "Child Opp",
group = "Child Opportunity Index") %>%
addLegend(pal = SMHLayerColor,
values = roster$`Type of School`,
position = "topleft",
title = "SMH Program",
group = "SMH" ) %>%
hideGroup(c("COVID19 % Positive", "Child Opportunity Index", "zips", "county", "SMH" ))
p
render("index.Rmd", flex_dashboard())
library(rmarkdown)
library(flexdashboard)
render("index.Rmd", flex_dashboard())
render("index.Rmd", flex_dashboard())
rmarkdown::render(input = "index.Rmd", output_format = "html_document")
?render
***
The following is a stacked bar chart of the proportion of each of the SVI categories by County. This shows the same story as the scatter plot but in proportions .
rmarkdown::render_site()
